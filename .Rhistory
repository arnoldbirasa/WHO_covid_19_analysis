# Loading the dataset - data <- read.csv("covid19_data.csv")
musana= read.csv(file.choose(), header=TRUE)
# Loading the dataset - data <- read.csv("covid19_data.csv")
musana= read.csv(file.choose(), header=TRUE)
# Loading the dataset - data <- read.csv("covid19_data.csv")
musana= read.csv(file.choose(), header=TRUE)
# Inspect the structure
str(musana)
str(musana)
attach(musana)
# Calculating basic summary statistics
summary(musana$New_cases)
summary(musana$New_deaths)
summary(musana$Cumulative_cases)
summary(musana$Cumulative_cases)
colnames(musana)[1]= "Date"
str(musana)
# Visualize trends in NewCases and NewDeaths over time
musana$Date= as.Date.character(musana$Date, c("%Y-%m-%d"))
str(musana)
library(ggplot2)
ggplot(musana, aes(x = Date)) +
geom_line(aes(y = New_cases), color = "blue") +
geom_line(aes(y = New_deaths), color = "red") +
labs(title = "Trends in NewCases and NewDeaths", x = "Date", y = "New Cases/Deaths")
# Loading the dataset - data <- read.csv("covid19_data.csv")
musana= read.csv("WHO-COVID-19-global-data.csv", header=TRUE)
# Perform time series decomposition for NewCases
NewCases_tseries <- ts(musana$New_cases, frequency = 365)
NewCases_decomp <- decompose(NewCases_tseries)
par(mfrow= c(2,2))
plot(NewCases_decomp$trend)
plot(NewCases_decomp$random)
plot(NewCases_decomp$x)
plot(NewCases_decomp$figure)
# Perform time series decomposition for NewDeaths
NewDeaths_tseries <- ts(musana$New_deaths, frequency = 365)
NewDeaths_decomp <- decompose(NewDeaths_tseries)
par(mfrow= c(2,2))
plot(NewDeaths_decomp$trend)
plot(NewDeaths_decomp$random)
plot(NewDeaths_decomp$x)
plot(NewDeaths_decomp$figure)
# Calculate correlation between NewCases and NewDeaths
correlation <- cor(musana$New_cases, musana$New_deaths)
correlation
# Investigate lag effect in correlation
correlation_lag <- cor(musana$New_cases[-1], musana$New_deaths[-length(musana$New_deaths)])
correlation_lag
# Split data into training and testing sets
training <- floor(0.8 * nrow(musana))
train_data <- musana[1:training, ]
test_data <- musana[(training + 1):nrow(musana), ]
# Build predictive model
model_1<- lm(New_cases ~ Date, data = train_data)
# Loading the dataset - data <- read.csv("covid19_data.csv")
musana= read.csv("WHO-COVID-19-global-data.csv", header=TRUE)
colnames(musana)[1]= "Date"
str(musana)
# Visualize trends in NewCases and NewDeaths over time
musana$Date= as.Date.character(musana$Date, c("%Y-%m-%d"))
str(musana)
# Perform time series decomposition for NewCases
NewCases_tseries <- ts(musana$New_cases, frequency = 365)
NewCases_decomp <- decompose(NewCases_tseries)
par(mfrow= c(2,2))
plot(NewCases_decomp$trend)
plot(NewCases_decomp$random)
plot(NewCases_decomp$x)
plot(NewCases_decomp$figure)
# Split data into training and testing sets
training <- floor(0.8 * nrow(musana))
train_data <- musana[1:training, ]
test_data <- musana[(training + 1):nrow(musana), ]
# Build predictive model
model_1<- lm(New_cases ~ Date, data = train_data)
# Forecast NewCases for the next 7 days
forecast= predict(model_1, newdata = data.frame(Date =seq(as.Date(max(musana$Date)) + 1, by="day", length.out=7)), interval = "prediction")
forecast
# Evaluate model's performance on the testing dataset
predictions= predict(model_1, newdata = test_data)
rmse <- sqrt(mean((test_data$New_cases - predictions)^2))
rmse
mae <- mean(abs(test_data$New_cases - predictions))
mae
# Calculate basic reproductive number R0 = (Total Number of New Cases) / (Total Number of Cases in the Previous Generation)
R0= sum(musana$New_cases) / sum(musana$New_cases[-nrow(musana)])
R0
# an R0 of 1 can suggest two things:
# an R0 of 1 can suggest two things:
# First, on average each individual infected with COVID_19 is likely to transmit to exactly one person
#1. Missing data: There was missing data in the dataset hence preventing further analysis which would have provided more insight on the dataset such as incidence rate and mortality rate
#1. Missing data: There was missing data in the dataset hence preventing further analysis which would have provided more insight on the dataset such as incidence rate and mortality rate
#2. Correlation Analysis: The weak correlation (0.31768) between COVID_19 new cases and COVID_19 deaths signifies that there are other factors influencing death rates apart from the new cases alone. Before making any significant decisions or predictions using this correlation, consider further research and analysis to identify other potential factors
#1. Missing data: There was missing data in the dataset hence preventing further analysis which would have provided more insight on the dataset such as incidence rate and mortality rate
#2. Correlation Analysis: The weak correlation (0.31768) between COVID_19 new cases and COVID_19 deaths signifies that there are other factors influencing death rates apart from the new cases alone. Before making any significant decisions or predictions using this correlation, consider further research and analysis to identify other potential factors
#3. Investigating the Lag Effect: The lag effect of 0.22177 for COVID_19 is not insignificant. Furthermore, it is also vital for temporal analyses, especially for predicting and controlling the spread of COVID_19 epidemic/pandemic. Conducting future studies to analyse the lag effect for more lag periods can provide more insightful results
#1. Missing data: There was missing data in the dataset hence preventing further analysis which would have provided more insight on the dataset such as incidence rate and mortality rate
#2. Correlation Analysis: The weak correlation (0.31768) between COVID_19 new cases and COVID_19 deaths signifies that there are other factors influencing death rates apart from the new cases alone. Before making any significant decisions or predictions using this correlation, consider further research and analysis to identify other potential factors
#3. Investigating the Lag Effect: The lag effect of 0.22177 for COVID_19 is not insignificant. Furthermore, it is also vital for temporal analyses, especially for predicting and controlling the spread of COVID_19 epidemic/pandemic. Conducting future studies to analyse the lag effect for more lag periods can provide more insightful results
#4. Predictive Modelling: The RMSE and MAE are quite too large, suggesting the predictions have a higher degree of deviation from the actual values. To improve in such cases, further studies need to be done and more data need to be collected to get a deeper and better insights
#1. Missing data: There was missing data in the dataset hence preventing further analysis which would have provided more insight on the dataset such as incidence rate and mortality rate
#2. Correlation Analysis: The weak correlation (0.31768) between COVID_19 new cases and COVID_19 deaths signifies that there are other factors influencing death rates apart from the new cases alone. Before making any significant decisions or predictions using this correlation, consider further research and analysis to identify other potential factors
#3. Investigating the Lag Effect: The lag effect of 0.22177 for COVID_19 is not insignificant. Furthermore, it is also vital for temporal analyses, especially for predicting and controlling the spread of COVID_19 epidemic/pandemic. Conducting future studies to analyse the lag effect for more lag periods can provide more insightful results
#4. Predictive Modelling: The RMSE and MAE are quite too large, suggesting the predictions have a higher degree of deviation from the actual values. To improve in such cases, further studies need to be done and more data need to be collected to get a deeper and better insights
#5. Epidemiological Analysis: An R0 of 1 indicates a stable condition of COVID_19 spread in the community. However, epidemiologically speaking it is bad if one individual gets sick and affects one individual, it should be kept lower than that. Furthermore, considering the dynamic nature of COVID_19, continue monitoring the R0 over time
#Daily cases and deaths by date reported to WHO
ggplot(musana, aes(x = Date)) +
geom_line(aes(y = New_cases), color = "blue") +
geom_line(aes(y = New_deaths), color = "red") +
labs(title = "Trends in NewCases and NewDeaths", x = "Date", y = "New Cases/Deaths")
# Perform time series decomposition for NewCases
NewCases_tseries <- ts(musana$New_cases, frequency = 365)
NewCases_decomp <- decompose(NewCases_tseries)
par(mfrow= c(2,2))
plot(NewCases_decomp$trend)
plot(NewCases_decomp$random)
plot(NewCases_decomp$x)
plot(NewCases_decomp$figure)
# Perform time series decomposition for NewDeaths
NewDeaths_tseries <- ts(musana$New_deaths, frequency = 365)
NewDeaths_decomp <- decompose(NewDeaths_tseries)
par(mfrow= c(2,2))
plot(NewDeaths_decomp$trend)
plot(NewDeaths_decomp$random)
plot(NewDeaths_decomp$x)
plot(NewDeaths_decomp$figure)
